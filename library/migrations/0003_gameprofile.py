# Generated by Django 5.2.4 on 2025-07-13 02:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0002_consolevariation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GameProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rawg_id', models.BigIntegerField()),
                ('title', models.CharField(max_length=255)),
                ('cover_url', models.URLField(blank=True)),
                ('ownership_status', models.CharField(choices=[('none', 'None'), ('owned', 'Owned'), ('wishlist', 'Wishlist')], default='none', max_length=10)),
                ('is_in_backlog', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_mastered', models.BooleanField(default=False)),
                ('progress', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('n/a', 'N/A')], default='not_started', max_length=20)),
                ('dropped_reason', models.CharField(blank=True, choices=[('lost_interest', 'Lost Interest'), ('too_difficult', 'Too Difficult'), ('not_fun', 'Gameplay Not Fun'), ('bugs', 'Bugs or Technical Issues'), ('poor_story', 'Poor Story/Plot'), ('time', 'Time Constraints'), ('prefer_other', 'Prefer Other Games'), ('other', 'Other')], help_text="Reason for dropping the game (if progress is 'Dropped')", max_length=30, null=True)),
                ('dropped_reason_notes', models.TextField(blank=True, help_text='Optional additional notes about why the game was dropped', null=True)),
                ('notes', models.TextField(blank=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'rawg_id')},
            },
        ),
    ]
